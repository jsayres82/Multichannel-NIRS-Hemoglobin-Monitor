=============================================================================
List of generated methods in project: ProcessorExpert

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "Led_Select" (component BitIO)
   - Led_Select_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - Led_Select_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - Led_Select_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - Led_Select_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.
   - Led_Select_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.

Module "AD1"       (component AD1forNirs)
   - AD1_Enable -Enables A/D converter component. <Events> may be generated (<DisableEvent>/<EnableEvent>). If possible, this 
                method switches on A/D converter device, voltage reference, etc.
   - AD1_Disable -Disables A/D converter component. No <events> will be generated. If possible, this method switches off A/D 
                converter device, voltage reference, etc.
   - AD1_Measure -This method performs one measurement on all channels that are set in the component inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - AD1_MeasureChan -This method performs measurement on one channel. (Note: If the <number of conversions> is more than one 
                the conversion of the A/D channel is performed specified number of times.)
   - AD1_GetValue -Returns the last measured values for all channels. Format and width of the value is a native format of the 
                A/D converter.
   - AD1_GetChanValue -Returns the last measured value of the required channel. Format and width of the value is a native 
                format of the A/D converter.
   - AD1_Calibrate -This method starts self calibration process. Calibration is typically used to remove the effects of the 
                gain and offset from a specific reading.
   - AD1_ConnectPin -This method reconnects the requested pin associated with the selected peripheral in this component. This 
                method is available only for CPU derivatives and peripherals that support the runtime pin sharing with other 
                internal on-chip peripherals.

Module "INT_FTM0"  (component InterruptVector)

Module "AD2"       (component AD2forNirs)
   - AD2_Enable -Enables A/D converter component. <Events> may be generated (<DisableEvent>/<EnableEvent>). If possible, this 
                method switches on A/D converter device, voltage reference, etc.
   - AD2_Disable -Disables A/D converter component. No <events> will be generated. If possible, this method switches off A/D 
                converter device, voltage reference, etc.
   - AD2_EnableEvent -Enables the <events>.
   - AD2_DisableEvent -Disables the <events>.
   - AD2_Start -This method starts continuous conversion on all channels that are set in the component inspector. When each 
                measurement on all channels has finished the <OnEnd > event may be invoked. This method is not available if the 
                <interrupt service> is disabled and the device doesn't support the continuous mode. Note: If time of 
                measurement is too short and the instruction clock is too slow then the conversion complete interrupt and its 
                handler may cause a system overflow.
   - AD2_Stop -This method stops the continuous measurement or disables a trigger mode (if supported by HW), which has been 
                started by one of the following methods:  [ Version specific information not for Freescale 56800 and HCS08 and 
                HC08 and HCS12 and HCS12X derivatives ]     - <Start>     - EnableInt(Chan)Trigger     - EnableExt(Chan)Trigger 
                The Stop method is available if one of the previously mentioned methods is supported by A/D converter device 
                and is enabled to be generated.
   - AD2_Measure -This method performs one measurement on all channels that are set in the component inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - AD2_MeasureChan -This method performs measurement on one channel. (Note: If the <number of conversions> is more than one 
                the conversion of the A/D channel is performed specified number of times.)
   - AD2_EnableIntChanTrigger -Enables the internal trigger mode. A conversion of one required channel will be launched by 
                internal sync pulse. If the <Number of conversions> property is greater than 1, a conversion will be launched 
                more than once (by an internal signal) according to <Number of conversions>. It's possible to disable the 
                trigger mode by <Stop> method.  [ Version specific information for other derivatives than Freescale HCS12 and 
                HCS12X ]   This EnableIntChanTrigger method is available only when the <Internal trigger> property is enabled.
   - AD2_GetValue -Returns the last measured values for all channels. Format and width of the value is a native format of the 
                A/D converter.
   - AD2_GetChanValue -Returns the last measured value of the required channel. Format and width of the value is a native 
                format of the A/D converter.
   - AD2_GetValue16 -This method returns the last measured values of all channels. Compared with <GetValue> method this method 
                returns more accurate result if the <number of conversions> is greater than 1 and <AD resolution> is less than 
                16 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - AD2_Calibrate -This method starts self calibration process. Calibration is typically used to remove the effects of the 
                gain and offset from a specific reading.
   - AD2_ConnectPin -This method reconnects the requested pin associated with the selected peripheral in this component. This 
                method is available only for CPU derivatives and peripherals that support the runtime pin sharing with other 
                internal on-chip peripherals.

Module "VREF"      (component Init_VREF_VAR0)
   - VREF_Init -This method initializes registers of the VREF module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "PDB0"      (component Init_PDB_VAR0)
   - PDB0_Init -This method initializes registers of the PDB module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "Cpu"       (component MK53N512MD100)

===================================================================================
